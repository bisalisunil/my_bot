<sdf version='1.7'>
  <model name='my_bot'>
    <link name="base_footprint"/>

    <link name='base_link'>
      <inertial>
        <pose relative_to='base_joint'>0.010803 0.002865 0.178941 0 -0 0</pose>
        <mass>1.0</mass>
        <inertia>
          <ixx>0.33188</ixx>
          <ixy>0.000411165</ixy>
          <ixz>0.000451077</ixz>
          <iyy>0.275665</iyy>
          <iyz>-0.000559536</iyz>
          <izz>0.558828</izz>
        </inertia>
      </inertial>
      <collision name='base_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <collision name='base_link_fixed_joint_lump__laser_frame_collision_1'>
        <pose>0 0 0.338 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/laser_frame.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <collision name='base_link_fixed_joint_lump__rtk_collision_2'>
        <pose>0 0.335 0.193 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/rtk.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='base_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name='base_link_fixed_joint_lump__laser_frame_visual_1'>
        <pose>0 0 0.338 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/laser_frame.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name='base_link_fixed_joint_lump__rtk_visual_2'>
        <pose>0 0.335 0.193 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/rtk.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <joint name="base_joint" type="fixed">
        <parent>base_footprint</parent>
        <child>base_link</child>
        <pose relative_to='base_footprint'>0.0 0.0 0 0 0 0</pose>
    </joint>

    <joint name='back_left_wheel_joint' type='revolute'>
      <pose relative_to='base_link'>-0.18566 0.37 0.0505 -1.5708 0 0</pose>
      <parent>base_link</parent>
      <child>back_left_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <effort>1</effort>
          <velocity>1</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='back_left_wheel'>
      <pose relative_to='back_left_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>-0 -0 -0.029 0 -0 0</pose>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.00818088</ixx>
          <ixy>8.31222e-19</ixy>
          <ixz>1.55059e-19</ixz>
          <iyy>0.00818088</iyy>
          <iyz>2.65575e-17</iyz>
          <izz>0.0158039</izz>
        </inertia>
      </inertial>
      <collision name='back_left_wheel_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/back_left_wheel.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='back_left_wheel_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/back_left_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='back_right_wheel_joint' type='revolute'>
      <pose relative_to='base_link'>-0.18566 -0.37 0.0505 1.5708 -0 0</pose>
      <parent>base_link</parent>
      <child>back_right_wheel</child>
      <axis>
        <xyz>0 0 -1</xyz>
        <limit>
          <effort>1</effort>
          <velocity>1</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='back_right_wheel'>
      <pose relative_to='back_right_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 -0 -0.029 0 -0 0</pose>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.00818088</ixx>
          <ixy>-8.31222e-19</ixy>
          <ixz>-1.63529e-19</ixz>
          <iyy>0.00818088</iyy>
          <iyz>5.33493e-17</iyz>
          <izz>0.0158039</izz>
        </inertia>
      </inertial>
      <collision name='back_right_wheel_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/back_right_wheel.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='back_right_wheel_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/back_right_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='front_left_wheel_joint' type='revolute'>
      <pose relative_to='base_link'>0.18566 0.37 0.0505 -1.5708 0 0</pose>
      <parent>base_link</parent>
      <child>front_left_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <effort>1</effort>
          <velocity>1</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='front_left_wheel'>
      <pose relative_to='front_left_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 -0 -0.029 0 -0 0</pose>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.00818088</ixx>
          <ixy>1.17455e-18</ixy>
          <ixz>5.62383e-20</ixz>
          <iyy>0.00818088</iyy>
          <iyz>2.65575e-17</iyz>
          <izz>0.0158039</izz>
        </inertia>
      </inertial>
      <collision name='front_left_wheel_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/front_left_wheel.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='front_left_wheel_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/front_left_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='front_right_wheel_joint' type='revolute'>
      <pose relative_to='base_link'>0.18566 -0.37 0.0505 1.5708 -0 0</pose>
      <parent>base_link</parent>
      <child>front_right_wheel</child>
      <axis>
        <xyz>0 0 -1</xyz>
        <limit>
          <effort>1</effort>
          <velocity>1</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>

    <link name='front_right_wheel'>
      <pose relative_to='front_right_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 -0 -0.029 0 -0 0</pose>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.00818088</ixx>
          <ixy>1.55584e-18</ixy>
          <ixz>-1.57806e-20</ixz>
          <iyy>0.00818088</iyy>
          <iyz>2.76541e-17</iyz>
          <izz>0.0158039</izz>
        </inertia>
      </inertial>
      <collision name='front_right_wheel_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/front_right_wheel.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='front_right_wheel_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://robot/meshes/front_right_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <joint name="lidar_joint" type="fixed">
        <pose relative_to='base_link'>0 0 0.338 0 0 0</pose>
        <parent>base_link</parent>
        <child>base_scan</child>
        
        <axis>
          <xyz>0 0 0</xyz>
        </axis>
    </joint>
    <link name="base_scan">
        <pose relative_to='lidar_joint'>0 0 0 0 0 0</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0.000</ixy>
            <ixz>0.000</ixz>
            <iyy>0.001</iyy>
            <iyz>0.000</iyz>
            <izz>0.001</izz>
          </inertia>
          <mass>0.221906397086315</mass>
        </inertial>

        <collision name="lidar_sensor_collision">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.0508</radius>
              <length>0.055</length>
            </cylinder>
          </geometry>
        </collision>

        <visual name="lidar_sensor_visual">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>model://robot/meshes/laser_frame.STL</uri>
              <scale>0.001 0.001 0.001</scale>
            </mesh>
          </geometry>
        </visual>

        <sensor name="my_bot_sens" type="ray">
          <always_on>true</always_on>
          <visualize>false</visualize>
          <pose>0 0 0 0 0 0</pose>
          <update_rate>10</update_rate>
          <ray>
            <scan>
                <horizontal>
                  <samples>360</samples>
                  <min_angle>-3.14</min_angle>
                  <max_angle>3.14</max_angle>
                </horizontal>
            </scan>
            <range>
              <min>0.5</min>
              <max>20.0</max>
              <resolution>0.015000</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
          <plugin name="my_bot_scan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <!-- <namespace>/tb3</namespace> -->
                <remapping>~/out:=scan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>base_scan</frame_name>
          </plugin>
        </sensor>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent>base_link</parent>
        <child>imu_link</child>
        <pose relative_to='base_link'>0 0 0.338 0 0 0</pose>
        <axis>
          <xyz>0 0 1</xyz>
        </axis>
    </joint>

    <link name="imu_link">
        <pose relative_to='imu_joint'>0 0 0 0 0 0</pose>
        <sensor name="tb3_imu" type="imu">
          <always_on>true</always_on>
          <update_rate>200</update_rate>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1.7e-2</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
            <initial_orientation_as_reference>false</initial_orientation_as_reference>
            <ros>
              <!-- <namespace>/tb3</namespace> -->
              <remapping>~/out:=imu</remapping>
              </ros>
          </plugin>
        </sensor>
    </link>  

    <joint name="gps_joint" type="fixed">
        <parent>base_link</parent>
        <child>gps_link</child>
        <pose relative_to='base_link'>0 0.335 0.193 0 0 0</pose>
        <axis>
          <xyz>0 0 1</xyz>
        </axis>
    </joint>  
    
     <link name="gps_link">
        <pose relative_to='base_link'>0 0 0 0 0 0</pose>        
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <inertia>
            <mass>0.001</mass>
            <ixx>0.001</ixx>
            <ixy>0.000</ixy>
            <ixz>0.000</ixz>
            <iyy>0.001</iyy>
            <iyz>0.000</iyz>
            <izz>0.001</izz>
          </inertia>
          <mass>0.125</mass>
        </inertial>
        <sensor name="tb3_gps" type="gps">
          <always_on>true</always_on>
          <update_rate>1</update_rate>
          <pose>0 0 0 0 0 0</pose>
          <gps>
            <position_sensing>
              <horizontal>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
              </horizontal>
              <vertical>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
              </vertical>
            </position_sensing>
          </gps>
          <plugin name="my_gps_plugin" filename="libgazebo_ros_gps_sensor.so">
            <ros>
              <remapping>~/out:=/gps/fix</remapping>
            </ros>
          </plugin>
        </sensor>
    </link>
    
    <plugin name="skid_steer_drive" filename="libgazebo_ros_diff_drive.so">
    
         <ros>
          <!-- Set namespace -->
          <!-- <namespace>/demo</namespace> -->

          <!-- Remap default topics -->
          <remapping>cmd_vel:=cmd_vel</remapping>
          <remapping>odom:=odom</remapping>
          <remapping>/tf:=tf</remapping>
         </ros>


         <updateRate>500.0</updateRate>
         <robotNamespace>/</robotNamespace>

         <num_wheel_pairs>2</num_wheel_pairs>

         <left_joint>front_left_wheel_joint</left_joint>
         <right_joint>front_right_wheel_joint</right_joint>
         <left_joint>back_left_wheel_joint</left_joint>
         <right_joint>back_right_wheel_joint</right_joint>

         <wheel_separation>0.730</wheel_separation>
         <wheel_separation>0.730</wheel_separation>

         <wheel_diameter>0.25</wheel_diameter>
         <wheel_diameter>0.25</wheel_diameter>

         <max_wheel_torque>20</max_wheel_torque>
         <max_wheel_acceleration>1.0</max_wheel_acceleration>

         <publish_odom>true</publish_odom>
        <publish_odom_tf>false</publish_odom_tf>
        <publish_wheel_tf>false</publish_wheel_tf>

        <odometry_topic>odom</odometry_topic>
        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_footprint</robot_base_frame>
        
      </plugin>
      <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=joint_states</remapping>
        </ros>
        <update_rate>30</update_rate>
		    <joint_name>front_left_wheel_joint</joint_name>
        <joint_name>front_right_wheel_joint</joint_name>
        <joint_name>back_left_wheel_joint</joint_name>
        <joint_name>back_right_wheel_joint</joint_name>

    </plugin>

  </model>
</sdf>
